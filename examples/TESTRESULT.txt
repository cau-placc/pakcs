Loading program: rev
[1,2,3,4]
[10,9,8,7,6,5,4,3,2,1]
Loading program: higher
[1,3,2]
[1,3,2]
3
120
120
Loading program: quicksort
[0,1,2,3]
Loading program: qsortlet
[0,1,2,3]
Loading program: inflists
[1,1,2,3,5,8,13,21,34,55]
[2,3,5,7,11]
Loading program: family_rel
{child=Susan} True
{child=Peter} True
{g=Antony, c=Susan} True
{g=Antony, c=Peter} True
{g=Bill, c=Andrew} True
{g=Antony, c=Andrew} True
Loading program: family_fun
{child=Susan} True
{child=Peter} True
{g=Antony, c=Susan} True
{g=Antony, c=Peter} True
{g=Bill, c=Andrew} True
{g=Antony, c=Andrew} True
Loading program: horseman
{m=S (S (S (S (S (S O))))), h=S (S O)} True
{m=O, h=S (S O), f=S (S (S (S (S (S (S (S O)))))))} True
{m=S O, h=S O, f=S (S (S (S (S (S O)))))} True
{m=S (S O), h=O, f=S (S (S (S O)))} True
Loading program: first
[O,S O]
{x=S O, y=O} True
Loading program: member
{x=2} True
{x=3} True
Loading program: colormap
{l1=Red, l2=Yellow, l3=Green, l4=Red} True
{l1=Red, l2=Yellow, l3=Green, l4=Blue} True
{l1=Red, l2=Yellow, l3=Blue, l4=Red} True
{l1=Red, l2=Yellow, l3=Blue, l4=Green} True
{l1=Red, l2=Green, l3=Yellow, l4=Red} True
{l1=Red, l2=Green, l3=Yellow, l4=Blue} True
{l1=Red, l2=Green, l3=Blue, l4=Red} True
{l1=Red, l2=Green, l3=Blue, l4=Yellow} True
{l1=Red, l2=Blue, l3=Yellow, l4=Red} True
{l1=Red, l2=Blue, l3=Yellow, l4=Green} True
{l1=Red, l2=Blue, l3=Green, l4=Red} True
{l1=Red, l2=Blue, l3=Green, l4=Yellow} True
{l1=Yellow, l2=Red, l3=Green, l4=Yellow} True
{l1=Yellow, l2=Red, l3=Green, l4=Blue} True
{l1=Yellow, l2=Red, l3=Blue, l4=Yellow} True
{l1=Yellow, l2=Red, l3=Blue, l4=Green} True
{l1=Yellow, l2=Green, l3=Red, l4=Yellow} True
{l1=Yellow, l2=Green, l3=Red, l4=Blue} True
{l1=Yellow, l2=Green, l3=Blue, l4=Red} True
{l1=Yellow, l2=Green, l3=Blue, l4=Yellow} True
{l1=Yellow, l2=Blue, l3=Red, l4=Yellow} True
{l1=Yellow, l2=Blue, l3=Red, l4=Green} True
{l1=Yellow, l2=Blue, l3=Green, l4=Red} True
{l1=Yellow, l2=Blue, l3=Green, l4=Yellow} True
{l1=Green, l2=Red, l3=Yellow, l4=Green} True
{l1=Green, l2=Red, l3=Yellow, l4=Blue} True
{l1=Green, l2=Red, l3=Blue, l4=Yellow} True
{l1=Green, l2=Red, l3=Blue, l4=Green} True
{l1=Green, l2=Yellow, l3=Red, l4=Green} True
{l1=Green, l2=Yellow, l3=Red, l4=Blue} True
{l1=Green, l2=Yellow, l3=Blue, l4=Red} True
{l1=Green, l2=Yellow, l3=Blue, l4=Green} True
{l1=Green, l2=Blue, l3=Red, l4=Yellow} True
{l1=Green, l2=Blue, l3=Red, l4=Green} True
{l1=Green, l2=Blue, l3=Yellow, l4=Red} True
{l1=Green, l2=Blue, l3=Yellow, l4=Green} True
{l1=Blue, l2=Red, l3=Yellow, l4=Green} True
{l1=Blue, l2=Red, l3=Yellow, l4=Blue} True
{l1=Blue, l2=Red, l3=Green, l4=Yellow} True
{l1=Blue, l2=Red, l3=Green, l4=Blue} True
{l1=Blue, l2=Yellow, l3=Red, l4=Green} True
{l1=Blue, l2=Yellow, l3=Red, l4=Blue} True
{l1=Blue, l2=Yellow, l3=Green, l4=Red} True
{l1=Blue, l2=Yellow, l3=Green, l4=Blue} True
{l1=Blue, l2=Green, l3=Red, l4=Yellow} True
{l1=Blue, l2=Green, l3=Red, l4=Blue} True
{l1=Blue, l2=Green, l3=Yellow, l4=Red} True
{l1=Blue, l2=Green, l3=Yellow, l4=Blue} True
Loading program: account
{b=250} True
{b=150} True
{s=[Deposit 100,Balance 100,Withdraw 30,Balance 70,Withdraw 30,Balance 40,Deposit 70,Balance 110,Withdraw 30,Balance 80,Withdraw 30,Balance 50]} True
Loading program: maxtree
Node (Node (Leaf 3) (Leaf 3)) (Node (Leaf 3) (Leaf 3))
Loading program: assembler
[9,4,9,0]
Loading program: ralign
[[O,O,O,A,B],[O,A,B,C,D],[O,O,A,B,C],[A,B,C,D,E]]
[[O,O,O,A,B],[O,A,B,C,D],[O,O,A,B,C],[A,B,C,D,E]]
Loading program: tctest
f :: Int -> Int
i :: a -> a
k :: a -> Int
Loading program: rectype
h :: ([Int],[Bool])
Loading program: diamond
                                       1    
                                  11       2    
                              21      12       3    
                          31      22      13       4    
                      41      32      23      14       5    
                  51      42      33      24      15       6    
              61      52      43      34      25      16       7    
          71      62      53      44      35      26      17       8    
      81      72      63      54      45      36      27      18       9    
  91      82      73      64      55      46      37      28      19      10    
      92      83      74      65      56      47      38      29      20    
          93      84      75      66      57      48      39      30    
              94      85      76      67      58      49      40    
                  95      86      77      68      59      50    
                      96      87      78      69      60    
                          97      88      79      70    
                              98      89      80    
                                  99      90    
                                     100    
Loading program: arithseq
[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
[1,5,9,13,17,21,25,29,33,37,41,45,49,53,57,61,65,69,73,77,81,85,89,93,97]
[1,5,9,13,17,21,25,29,33,37,41,45,49,53,57,61,65,69,73,77]
Loading program: multgen
[(1,4),(1,5),(2,4),(2,5),(3,4),(3,5)]
[(1,1),(2,1),(2,2),(3,1),(3,2),(3,3)]
[(3,4,5),(5,12,13),(6,8,10),(7,24,25),(8,15,17),(9,12,15),(9,40,41),(10,24,26),(12,16,20),(12,35,37),(14,48,50),(15,20,25),(15,36,39),(16,30,34),(18,24,30),(20,21,29),(21,28,35),(24,32,40),(27,36,45),(30,40,50)]
Loading program: psort
[1,2,3,4,5,6]
Loading program: Default
0
1
[3]
[4,3]
[3,4,5]
Loading program: casetest
[1]
[2,1]
[1,2,3]
152
True
False
True
False
False
